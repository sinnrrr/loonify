basePath: /v1
definitions:
  models.Category:
    properties:
      name:
        type: string
      parent_id:
        type: integer
    required:
    - name
    type: object
  models.CategoryResponse:
    properties:
      data:
        $ref: '#/definitions/models.Category'
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  models.Location:
    properties:
      address_components:
        type: string
      formatted_address:
        type: string
      geometry:
        type: string
      name:
        type: string
      place_id:
        type: integer
      url:
        type: string
    required:
    - address_components
    - formatted_address
    - geometry
    - name
    - place_id
    - url
    type: object
  models.LocationResponse:
    properties:
      data:
        $ref: '#/definitions/models.Location'
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  models.Post:
    properties:
      address_id:
        type: integer
      category_id:
        type: integer
      description:
        type: string
      location_id:
        type: integer
      reward:
        type: string
      status:
        type: string
      title:
        type: string
      user_id:
        type: integer
    required:
    - address_id
    - category_id
    - description
    - location_id
    - status
    - title
    - user_id
    type: object
  models.PostResponse:
    properties:
      data:
        $ref: '#/definitions/models.Post'
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  models.User:
    properties:
      address_id:
        type: integer
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      token:
        type: string
    required:
    - name
    - password
    type: object
  models.UserResponse:
    properties:
      data:
        $ref: '#/definitions/models.User'
        type: object
      message:
        type: string
      status:
        type: string
    type: object
  v1.DefaultResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
  v1.ResponseWithData:
    properties:
      data:
        type: object
      errors:
        type: object
      message:
        type: string
      status:
        type: string
    type: object
host: loonify.herokuapp.com
info:
  contact: {}
  license: {}
  title: Loonify API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Make a login attempt
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Make a login operation
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Make a sign up attempt
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Make a registration operation
      tags:
      - Auth
  /categories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: List categories from database
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Create category using provided information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Create category
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete category from database using ID
      operationId: get-string-by-int
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Delete concrete category
      tags:
      - Categories
    get:
      consumes:
      - application/json
      description: Get the category by ID
      operationId: get-string-by-int
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
      summary: Show the category
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Update category information using ID
      operationId: get-string-by-int
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Update concrete category
      tags:
      - Categories
  /code/resend:
    post:
      consumes:
      - application/json
      description: Make a an email letter with authorization code again
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Resend email with code
      tags:
      - Auth
  /code/verify:
    post:
      consumes:
      - application/json
      description: Make a verification of authorization code, that was sent in letter
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
      summary: Verify code provided in email
      tags:
      - Auth
  /locations:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LocationResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: List locations from database
      tags:
      - Locations
    post:
      consumes:
      - application/json
      description: Create location using provided information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Create location
      tags:
      - Locations
  /locations/{id}:
    get:
      consumes:
      - application/json
      description: Get the location by ID
      operationId: get-string-by-int
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
      summary: Show the location
      tags:
      - Locations
    post:
      consumes:
      - application/json
      description: Update location information using ID
      operationId: get-string-by-int
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LocationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Update concrete location
      tags:
      - Locations
  /posts:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: List posts from database
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Create post using provided information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Create post
      tags:
      - Posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete post from database using ID
      operationId: get-string-by-int
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Delete concrete post
      tags:
      - Posts
    get:
      consumes:
      - application/json
      description: Get the post by ID
      operationId: get-string-by-int
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostResponse'
      summary: Show the post
      tags:
      - Posts
    post:
      consumes:
      - application/json
      description: Update post information using ID
      operationId: get-string-by-int
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Update concrete post
      tags:
      - Posts
  /push:
    post:
      consumes:
      - application/json
      description: Send a push to the concrete device using FCM
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Send a push
      tags:
      - Push
  /users:
    get:
      consumes:
      - application/json
      description: Get all users from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: List users
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user from database using user ID
      operationId: get-string-by-int
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Delete concrete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Get the user by ID
      operationId: get-string-by-int
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
      summary: Show the user
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Update user information using user ID
      operationId: get-string-by-int
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.ResponseWithData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Update concrete user
      tags:
      - Users
  /users/me:
    get:
      consumes:
      - application/json
      description: Retrieve current user info using token from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.DefaultResponse'
      summary: Get current user info
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
